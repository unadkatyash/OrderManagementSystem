@page
@model OrderManagementSystem.API.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Create Order";
    Layout = "_Layout";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card slide-in">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0"><i class="fas fa-plus"></i> Create New Order</h4>
            </div>
            <div class="card-body">
                <form method="post" id="orderForm">
                    @Html.AntiForgeryToken()

                    <!-- Customer Info -->
                    <div class="mb-4">
                        <h5 class="text-primary mb-3"><i class="fas fa-user"></i> Customer Information</h5>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerName" class="form-label">
                                        <i class="fas fa-user"></i> Customer Name
                                    </label>
                                    <input asp-for="CustomerName" class="form-control" required />
                                    <span asp-validation-for="CustomerName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerEmail" class="form-label">
                                        <i class="fas fa-envelope"></i> Customer Email
                                    </label>
                                    <input asp-for="CustomerEmail" type="email" class="form-control" required />
                                    <span asp-validation-for="CustomerEmail" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ShippingAddress" class="form-label">
                                <i class="fas fa-map-marker-alt"></i> Shipping Address
                            </label>
                            <textarea asp-for="ShippingAddress" class="form-control" rows="3" required></textarea>
                            <span asp-validation-for="ShippingAddress" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5 class="text-primary mb-0"><i class="fas fa-box"></i> Order Items</h5>
                            <button type="button" class="btn btn-outline-success btn-sm" onclick="addItem()">
                                <i class="fas fa-plus"></i> Add Item
                            </button>
                        </div>

                        <div id="order-items">
                            <div class="order-item slide-in">
                                <input type="hidden" name="Order.OrderItems.Index" value="0" />
                                <div class="row">
                                    <div class="col-5">
                                        <div class="mb-2">
                                            <label class="form-label small">Product Name</label>
                                            <input name="Order.OrderItems[0].ProductName" class="form-control" required />
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="mb-2">
                                            <label class="form-label small">Quantity</label>
                                            <input name="Order.OrderItems[0].Quantity" type="number" class="form-control" min="1" required />
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="mb-2">
                                            <label class="form-label small">Unit Price ($)</label>
                                            <input name="Order.OrderItems[0].UnitPrice" type="number" step="0.01" class="form-control" min="0" required />
                                        </div>
                                    </div>
                                    <div class="col-1 d-flex align-items-end">
                                        <button type="button" class="btn btn-outline-danger btn-sm mb-2" onclick="removeItem(this)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Order Summary -->
                    <div class="mb-4">
                        <div class="card bg-light">
                            <div class="card-body">
                                <h6 class="text-primary"><i class="fas fa-calculator"></i> Order Summary</h6>
                                <div class="row">
                                    <div class="col-md-6">
                                        <p class="mb-1">Total Items: <span id="total-items">0</span></p>
                                        <p class="mb-0">Total Amount: <strong id="total-amount">$0.00</strong></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Buttons -->
                    <div class="d-flex justify-content-between">
                        <a href="/" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Orders
                        </a>
                        <button type="submit" class="btn btn-primary" id="submitBtn">
                            <i class="fas fa-save"></i> Create Order
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let itemIndex = 1;

        function addItem() {
            const container = document.getElementById('order-items');
            const newItem = document.createElement('div');
            newItem.className = 'order-item slide-in';
            newItem.innerHTML = `
                        <input type="hidden" name="Order.OrderItems.Index" value="${itemIndex}" />
                        <div class="row">
                            <div class="col-5">
                                <div class="mb-2">
                                    <label class="form-label small">Product Name</label>
                                    <input name="Order.OrderItems[${itemIndex}].ProductName" class="form-control" required />
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="mb-2">
                                    <label class="form-label small">Quantity</label>
                                    <input name="Order.OrderItems[${itemIndex}].Quantity" type="number" class="form-control" min="1" required oninput="calculateTotal()" />
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="mb-2">
                                    <label class="form-label small">Unit Price ($)</label>
                                    <input name="Order.OrderItems[${itemIndex}].UnitPrice" type="number" step="0.01" class="form-control" min="0" required oninput="calculateTotal()" />
                                </div>
                            </div>
                            <div class="col-1 d-flex align-items-end">
                                <button type="button" class="btn btn-outline-danger btn-sm mb-2" onclick="removeItem(this)">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>`;
            container.appendChild(newItem);
            itemIndex++;
            addFadeInAnimation(newItem);
            calculateTotal();
        }

        function removeItem(button) {
            const items = document.querySelectorAll('.order-item');
            if (items.length > 1) {
                const item = button.closest('.order-item');
                item.classList.add('fade-out');
                setTimeout(() => {
                    item.remove();
                    calculateTotal();
                }, 300);
            } else {
                showErrorToast('At least one item is required.');
            }
        }

        function calculateTotal() {
            const items = document.querySelectorAll('.order-item');
            let totalItems = 0, totalAmount = 0;
            items.forEach(item => {
                const q = parseFloat(item.querySelector('input[name*="Quantity"]').value) || 0;
                const p = parseFloat(item.querySelector('input[name*="UnitPrice"]').value) || 0;
                totalItems += q;
                totalAmount += q * p;
            });
            document.getElementById('total-items').textContent = totalItems;
            document.getElementById('total-amount').textContent = '$' + totalAmount.toFixed(2);
        }

        function validateForm() {
            let valid = false;
            document.querySelectorAll('.order-item').forEach(item => {
                const name = item.querySelector('input[name*="ProductName"]').value.trim();
                const q = +item.querySelector('input[name*="Quantity"]').value;
                const p = +item.querySelector('input[name*="UnitPrice"]').value;
                if (name && q > 0 && p > 0) valid = true;
            });
            if (!valid) showErrorToast('Please add at least one valid item.');
            return valid;
        }

        document.addEventListener('DOMContentLoaded', () => {
            calculateTotal();
            document.querySelectorAll('input[name*="Quantity"], input[name*="UnitPrice"]').forEach(i => {
                i.addEventListener('input', calculateTotal);
            });
        });

        document.getElementById('orderForm').addEventListener('submit', e => {
            if (!validateForm()) e.preventDefault();
            else showLoading(document.getElementById('submitBtn'));
        });
    </script>
    <style>
        @@keyframes fadeOut {
            from {
                opacity: 1;
                transform: translateY(0);
            }

            to {
                opacity: 0;
                transform: translateY(-20px);
            }
        }

        .fade-out {
            animation: fadeOut 0.3s ease-out forwards;
        }
    </style>
}
